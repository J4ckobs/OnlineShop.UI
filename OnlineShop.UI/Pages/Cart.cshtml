@page
@model OnlineShop.UI.Pages.CartModel
@{
}

<div class="container">
	<div class="columns">
		<div class="column is-8 is-offset-2">
			@foreach (var product in Model.Cart)
			{
				<div class="level" id="product-@product.StockId">
					<div class="level-item">
						<figure class="image is-128x128">       
							<img src="~/images/item.jpg" />
						</figure>
					</div>
					<div class="level-item">
						<p class="title">
							@product.Name
						</p>
					</div>
					<div class="level-item">
						<div class="columns is-gapless has-text-centered is-mobile is-multiline">
							<div class="column is-4">
								<button class="button" type="button" onclick="removeOneFromCart(event)" data-stock-id="@product.StockId">
									-
								</button>
								</div>
							<div class="column is-4 is-align-self-center" id="stock-@product.StockId">
								<p> @product.Quantity</p>
							</div>
							<div class="column is-4">
								<button class="button" type="button" onclick="addOneToCart(event)" data-stock-id="@product.StockId">
									+
								</button>
							</div>
							<div class="column is-12">
								<a class="has-text-danger" onclick="removeAllFromCart(event)" data-stock-id="@product.StockId">
									Remove</a>
							</div>
						</div>
					</div>
					<div class="level-item">
						<p> @product.Value</p>
					</div>
				</div>
			}
			<div class="has-text-right">
				<a class="button is-text" asp-page="Index">Return to Shop</a>
				<a class="button is-success" asp-page="/Checkout/CustomerInformation">Checkout</a>
			</div>
		</div>
	</div>
</div>

@section scripts {
	<script src="https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.js"></script>

	<script>
		var removeOneFromCart = function (e) {
			var stockId = e.target.dataset.stockId;

			axios.post("/Cart/RemoveOne/" + stockId)
				.then(resizeBy => {
					var id = "stock-" + stockId;
					var el = document.getElementById(id);

					var qty = parseInt(el.innerText);

					el.innerText = (qty - 1);

				})
				.catch(err => {
					alert(err.error);
				});

		}

		var addOneToCart = function (e) {
			var stockId = e.target.dataset.stockId;

			axios.post("/Cart/AddOne/" + stockId)
				.then(resizeBy => {
					var id = "stock-" + stockId;
					var el = document.getElementById(id);

					var qty = parseInt(el.innerText);

					el.innerText = (qty + 1);
				})
				.catch(err => {
					alert(err.error);
				});
		}

		var removeAllFromCart = function (e) {
			var stockId = e.target.dataset.stockId;

			axios.post("/Cart/RemoveAll/" + stockId)
				.then(resizeBy => {
					var id = "product-" + stockId;
					var el = document.getElementById(id);

					var qty = parseInt(el.innerText);

					el.outerHTML = "";
				})
				.catch(err => {
					alert(err.error);
				});
		}
	</script>
}